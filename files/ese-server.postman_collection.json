{
  "info": {
    "_postman_id": "229d5446-3df1-447e-a751-138b867294e4",
    "name": "ese-server",
    "description": "\n[Event-Streaming-Example/ese-server: BE server in Go that will act as the event publisher for the events generated by the (ese-client). (github.com)](https://github.com/Event-Streaming-Example/ese-server)\n\nEach endpoint in this collection has the required documentation to understand its request/response.\n\nThere is also a mock server that can be used to simulate the examples. One only needs to change the `server_url` environment variable in each request to try it out.\n\nHowever do note that the mock server will only return static responses.\n\n**Mock URL**: [https://425ff8f1-c6b8-4513-9e6e-645955bd1655.mock.pstmn.io](https://425ff8f1-c6b8-4513-9e6e-645955bd1655.mock.pstmn.io)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "11208117"
  },
  "item": [
    {
      "name": "Health Point",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{server_url}}/",
          "host": ["{{server_url}}"],
          "path": [""]
        },
        "description": "Simple endpoint to check if the server is up and running or not."
      },
      "response": [
        {
          "name": "Health Point",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:2000/",
              "protocol": "http",
              "host": ["localhost"],
              "port": "2000",
              "path": [""]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 17 Feb 2024 10:53:26 GMT"
            },
            {
              "key": "Content-Length",
              "value": "42"
            }
          ],
          "cookie": [],
          "body": "{\n    \"message\": \"Server running @:2000\"\n}"
        }
      ]
    },
    {
      "name": "Push a single event",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"event_type\": \"CLICK_STREAM_EVENT\",\n    \"timestamp\": 1704180422410,\n    \"ip\": \"103.191.91.57\",\n    \"data\": {\n        \"event\": \"KEY_PRESS_EVENT\"\n    }\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{server_url}}/event",
          "host": ["{{server_url}}"],
          "path": ["event"]
        },
        "description": "This endpoint pushes a single event to the BE server."
      },
      "response": [
        {
          "name": "Push a single event",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"event_type\": \"CLICK_STREAM_EVENT\",\n    \"timestamp\": 1704180422410,\n    \"ip\": \"103.191.91.57\",\n    \"data\": {\n        \"event\": \"KEY_PRESS_EVENT\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:2000/event",
              "protocol": "http",
              "host": ["localhost"],
              "port": "2000",
              "path": ["event"]
            }
          },
          "status": "Created",
          "code": 201,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 17 Feb 2024 10:53:53 GMT"
            },
            {
              "key": "Content-Length",
              "value": "268"
            }
          ],
          "cookie": [],
          "body": "{\n    \"entity\": {\n        \"event_type\": \"CLICK_STREAM_EVENT\",\n        \"timestamp\": 1704180422410,\n        \"ip\": \"103.191.91.57\",\n        \"data\": {\n            \"event\": \"KEY_PRESS_EVENT\"\n        }\n    },\n    \"meta_data\": {\n        \"server_timestamp\": 1708167233\n    }\n}"
        }
      ]
    },
    {
      "name": "Push multiple events",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"events\" :[\n        {\n    \"event_type\": \"CLICK_STREAM_EVENT\",\n    \"timestamp\": 1704180422410,\n    \"ip\": \"103.191.91.54\",\n    \"data\": {\n        \"event\": \"KEY_PRESS_EVENT\"\n    }\n},\n{\n    \"eventType\": \"CLICK_STREAM_EVENT\",\n    \"timestamp\": 1704180422412,\n    \"ip\": \"103.191.91.54\",\n    \"data\": {\n        \"event\": \"KEY_PRESS_EVENT\"\n    }\n}\n    ]\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{server_url}}/events",
          "host": ["{{server_url}}"],
          "path": ["events"]
        },
        "description": "This endpoint helps push multiple events in one push to the BE. This will be useful when we do a buffered push from the frontend to reduce multiple calls."
      },
      "response": [
        {
          "name": "Push multiple events",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"events\" :[\n        {\n    \"event_type\": \"CLICK_STREAM_EVENT\",\n    \"timestamp\": 1704180422410,\n    \"ip\": \"103.191.91.54\",\n    \"data\": {\n        \"event\": \"KEY_PRESS_EVENT\"\n    }\n},\n{\n    \"eventType\": \"CLICK_STREAM_EVENT\",\n    \"timestamp\": 1704180422412,\n    \"ip\": \"103.191.91.54\",\n    \"data\": {\n        \"event\": \"KEY_PRESS_EVENT\"\n    }\n}\n    ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "http://localhost:2000/events",
              "protocol": "http",
              "host": ["localhost"],
              "port": "2000",
              "path": ["events"]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 17 Feb 2024 10:54:39 GMT"
            },
            {
              "key": "Content-Length",
              "value": "628"
            }
          ],
          "cookie": [],
          "body": "[\n    {\n        \"entity\": {\n            \"event_type\": \"CLICK_STREAM_EVENT\",\n            \"timestamp\": 1704180422410,\n            \"ip\": \"103.191.91.54\",\n            \"data\": {\n                \"event\": \"KEY_PRESS_EVENT\"\n            }\n        },\n        \"meta_data\": {\n            \"server_timestamp\": 1708167279\n        }\n    },\n    {\n        \"entity\": {\n            \"event_type\": \"\",\n            \"timestamp\": 1704180422412,\n            \"ip\": \"103.191.91.54\",\n            \"data\": {\n                \"event\": \"KEY_PRESS_EVENT\"\n            }\n        },\n        \"meta_data\": {\n            \"server_timestamp\": 1708167279\n        }\n    }\n]"
        }
      ]
    },
    {
      "name": "Get all events",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{server_url}}/events",
          "host": ["{{server_url}}"],
          "path": ["events"]
        },
        "description": "This endpoint will be queried by the consumer to fetch all the events that have been emitted by the FE."
      },
      "response": [
        {
          "name": "Get all events",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:2000/events",
              "protocol": "http",
              "host": ["localhost"],
              "port": "2000",
              "path": ["events"]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 17 Feb 2024 10:54:46 GMT"
            },
            {
              "key": "Content-Length",
              "value": "1416"
            }
          ],
          "cookie": [],
          "body": "[\n    {\n        \"ip\": \"103.191.91.54\",\n        \"event_logs\": [\n            {\n                \"entity\": {\n                    \"event_type\": \"CLICK_STREAM_EVENT\",\n                    \"timestamp\": 1704180422410,\n                    \"ip\": \"103.191.91.54\",\n                    \"data\": {\n                        \"event\": \"KEY_PRESS_EVENT\"\n                    }\n                },\n                \"meta_data\": {\n                    \"server_timestamp\": 1708167279\n                }\n            },\n            {\n                \"entity\": {\n                    \"event_type\": \"\",\n                    \"timestamp\": 1704180422412,\n                    \"ip\": \"103.191.91.54\",\n                    \"data\": {\n                        \"event\": \"KEY_PRESS_EVENT\"\n                    }\n                },\n                \"meta_data\": {\n                    \"server_timestamp\": 1708167279\n                }\n            }\n        ]\n    },\n    {\n        \"ip\": \"103.191.91.57\",\n        \"event_logs\": [\n            {\n                \"entity\": {\n                    \"event_type\": \"CLICK_STREAM_EVENT\",\n                    \"timestamp\": 1704180422410,\n                    \"ip\": \"103.191.91.57\",\n                    \"data\": {\n                        \"event\": \"KEY_PRESS_EVENT\"\n                    }\n                },\n                \"meta_data\": {\n                    \"server_timestamp\": 1708167233\n                }\n            }\n        ]\n    }\n]"
        }
      ]
    },
    {
      "name": "Prometheus Metrics",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{server_url}}/metrics",
          "host": ["{{server_url}}"],
          "path": ["metrics"]
        },
        "description": "This endpoint is what Prometheus will poll to get the timeseries data that it needs."
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "server_url",
      "value": "http://localhost:2000",
      "type": "string"
    }
  ]
}
